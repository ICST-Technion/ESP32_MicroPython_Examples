
This code uses the _thread module to run two tasks concurrently on an ESP32:
1.Continuously blinking the built-in LED.
2.Printing "hello world" to the console every 2 seconds.


Function Explanations:
------------------------------------------------------------------------------------------------------------------------------------------------------------------------

1. blink_led()

Purpose: Turns the LED on for 1 second and then off for 1 second.

How it works:
1.led.value(0) turns the LED on.
2.sleep(1) pauses execution for 1 second.
3.led.value(1) turns the LED off.
4.Another sleep(1) pauses for 1 second before the next cycle.

Key Use: Defines a single blink cycle for the LED.

------------------------------------------------------------------------------------------------------------------------------------------------------------------------

2. blink_forever()

Purpose: Runs the blink_led() function in an infinite loop.

How it works:
1.Continuously calls blink_led() to keep the LED blinking indefinitely.

Key Use: Provides a persistent, repeating task for the LED.

------------------------------------------------------------------------------------------------------------------------------------------------------------------------

3._thread.start_new_thread(blink_forever, ())

Purpose: Starts the blink_forever function in a new thread.

How it works:
1._thread.start_new_thread takes a function and its arguments (an empty tuple () in this case) and runs it concurrently.
2.The blink_forever function will now execute in parallel with the main thread.

Key Use: Enables multitasking on the ESP32.

------------------------------------------------------------------------------------------------------------------------------------------------------------------------

4. Main Loop (while True)

Purpose: Prints "hello world" every 2 seconds in the main thread.

How it works:
1.Uses print() to output "hello world".
2.sleep(2) ensures a 2-second interval between each print.

Key Use: Demonstrates how the main thread continues to run independently of the blinking task.

------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Program Execution:
1.The _thread module starts a new thread to run blink_forever, which controls the LED.
2.Simultaneously, the main thread prints "hello world" every 2 seconds.
3.Both tasks run concurrently without blocking each other.



Resources and websites:

1.https://www.chatgpt.com/
2.https://www.perplexity.ai/
3.https://www.youtube.com/watch?v=QeDnjcdGrpY&t=1836s&ab_channel=KevinMcAleer